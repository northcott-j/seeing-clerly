{"version":3,"sources":["api/locations/locations.controller.js"],"names":["exports","listLocations","req","res","all","filters","query","state","State","toUpperCase","population","Population","$gt","city","City","name","Name","$regex","id","_id","find","err","locations","length","locationArray","locationCounter","forEach","location","push","campus","Campus","status","send","catch","locationData","params","stat","year","findById","exec","then","CrimeStats","toString","getCities","distinct","errors","cities","locationStatistics","crime","cleanLocations","numLocations","maxLocation","val","minLocation","crimeRange","crimeQ1","crimeQ3","crimeIQR","crimeMedian","crimeSum","crimeMean","crimeVariance","crimeStandDev","crimePercVar","locationCrimeVal","cleanLocationCounter","sort","a","b","cleanLocation","cleanLocationCrimeVal","Math","pow","parseInt","max","sqrt","sampleSize","min","range","iqr","median","mean","variance","standDev","percVar"],"mappings":";AACA;;AACA;;;;;;AAEA;AACAA,QAAQC,aAAR,GAAwB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,GAApB,EAAyB;AAC/C;AACA,MAAIC,UAAU,EAAd;AACA,MAAIH,IAAII,KAAJ,CAAUC,KAAd,EAAqB;AACnBF,YAAQG,KAAR,GAAgBN,IAAII,KAAJ,CAAUC,KAAV,CAAgBE,WAAhB,EAAhB;AACD;AACD,MAAIP,IAAII,KAAJ,CAAUI,UAAd,EAA0B;AACxBL,YAAQM,UAAR,GAAqB,EAACC,KAAKV,IAAII,KAAJ,CAAUI,UAAhB,EAArB;AACD;AACD,MAAIR,IAAII,KAAJ,CAAUO,IAAd,EAAoB;AAClBR,YAAQS,IAAR,GAAeZ,IAAII,KAAJ,CAAUO,IAAV,CAAeJ,WAAf,EAAf;AACD;AACD,MAAIP,IAAII,KAAJ,CAAUS,IAAd,EAAoB;AAClBV,YAAQW,IAAR,GAAe,EAAEC,QAAQf,IAAII,KAAJ,CAAUS,IAAV,CAAeN,WAAf,EAAV,EAAf;AACD;AACD,MAAIP,IAAII,KAAJ,CAAUY,EAAd,EAAkB;AAChBb,YAAQc,GAAR,GAAcjB,IAAII,KAAJ,CAAUY,EAAxB;AACD;AACD,qBAASE,IAAT,CAAcf,OAAd,EAAuB,UAAUgB,GAAV,EAAeC,SAAf,EAA0B;AAC/C,QAAIA,aAAaA,UAAUC,MAAV,GAAmB,CAApC,EAAuC;AACrC,UAAIC,gBAAgB,EAApB;AACA,UAAIC,kBAAkBH,UAAUC,MAAhC;AACAD,gBAAUI,OAAV,CAAkB,UAAUC,QAAV,EAAoB;AACpCF,2BAAmB,CAAnB;AACA,YAAIrB,QAAQ,CAAZ,EAAe;AACboB,wBAAcI,IAAd,CAAmBD,QAAnB;AACD,SAFD,MAEO;AACLH,wBAAcI,IAAd,CAAmB;AACjBV,gBAAIS,SAASR,GADI;AAEjBJ,kBAAMY,SAASX,IAFE;AAGjBN,wBAAYiB,SAAShB,UAHJ;AAIjBE,kBAAMc,SAASb,IAJE;AAKjBe,oBAAQF,SAASG,MALA;AAMjBvB,mBAAOoB,SAASnB;AANC,WAAnB;AAQD;AACD,YAAIiB,oBAAoB,CAAxB,EAA2B;AACzBtB,cAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,aAArB;AACA,iBAAO,IAAP;AACD;AACF,OAlBD;AAmBD,KAtBD,MAsBO;AACLrB,UAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB;AACD;AACF,GA1BD,EA0BGC,KA1BH,CA0BS,YAAY;AACnB9B,QAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAArB;AACD,GA5BD;AA6BD,CA/CD;;AAiDA;AACAhC,QAAQkC,YAAR,GAAuB,UAAUhC,GAAV,EAAeC,GAAf,EAAoB;AACzC,MAAIe,KAAKhB,IAAIiC,MAAJ,CAAWjB,EAApB;AACA,MAAIkB,OAAOlC,IAAIiC,MAAJ,CAAWC,IAAtB;AACA,MAAIC,OAAOnC,IAAIiC,MAAJ,CAAWE,IAAtB;AACA,MAAInB,EAAJ,EAAQ;AACN,uBAASoB,QAAT,CAAkBpB,EAAlB,EAAsBqB,IAAtB,GAA6BC,IAA7B,CAAkC,UAAUb,QAAV,EAAoB;AACpD,UAAIA,QAAJ,EAAc;AACZ,YAAIS,IAAJ,EAAU;AACR,cAAIC,IAAJ,EAAU;AACRlC,gBAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,SAASc,UAAT,CAAoBL,IAApB,EAA0BC,IAA1B,EAAgCK,QAAhC,EAArB;AACD,WAFD,MAGK;AACHvC,gBAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,SAASc,UAAT,CAAoBL,IAApB,CAArB;AACD;AACF,SAPD,MAQK;AACHjC,cAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,SAASc,UAA9B;AACD;AACF,OAZD,MAaK;AACHtC,YAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB;AACD;AACF,KAjBD,EAiBGC,KAjBH,CAiBS,YAAY;AACnB9B,UAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,2BAArB;AACD,KAnBD;AAoBD,GArBD,MAqBO;AACLhC,YAAQC,aAAR,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC,CAAhC;AACD;AACF,CA5BD;;AA8BA;AACAH,QAAQ2C,SAAR,GAAoB,UAAUzC,GAAV,EAAeC,GAAf,EAAoB;AACtC,MAAIE,UAAU,EAAd;AACA,MAAIH,IAAII,KAAJ,CAAUC,KAAd,EAAqB;AACnBF,YAAQG,KAAR,GAAgBN,IAAII,KAAJ,CAAUC,KAAV,CAAgBE,WAAhB,EAAhB;AACD;AACD,MAAIP,IAAII,KAAJ,CAAUO,IAAd,EAAoB;AAClBR,YAAQS,IAAR,GAAe,EAAEG,QAAQf,IAAII,KAAJ,CAAUO,IAAV,CAAeJ,WAAf,EAAV,EAAf;AACD;AACD,MAAIP,IAAII,KAAJ,CAAUI,UAAd,EAA0B;AACxBL,YAAQM,UAAR,GAAqB,EAACC,KAAKV,IAAII,KAAJ,CAAUI,UAAhB,EAArB;AACD;AACD,qBAASkC,QAAT,CAAkB,MAAlB,EAA0BvC,OAA1B,EAAmC,UAAUwC,MAAV,EAAkBC,MAAlB,EAA0B;AAC3D,QAAID,MAAJ,EAAY;AACV1C,UAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,2BAArB;AACD,KAFD,MAEO,IAAIc,MAAJ,EAAY;AACjB3C,UAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBc,MAArB;AACD,KAFM,MAEA;AACL3C,UAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB;AACD;AACF,GARD;AASD,CApBD;;AAuBA;;;;;;;;;;;;;;;;;;AAkBAhC,QAAQ+C,kBAAR,GAA6B,UAAU7C,GAAV,EAAeC,GAAf,EAAoB;AAC/C,MAAI6C,QAAQ9C,IAAIiC,MAAJ,CAAWa,KAAvB;AACA,MAAIX,OAAOnC,IAAIiC,MAAJ,CAAWE,IAAtB;AACA,MAAIhC,UAAU,EAAd;AACA,MAAIH,IAAII,KAAJ,CAAUC,KAAd,EAAqB;AACnBF,YAAQG,KAAR,GAAgBN,IAAII,KAAJ,CAAUC,KAAV,CAAgBE,WAAhB,EAAhB;AACD;AACD,MAAIP,IAAII,KAAJ,CAAUI,UAAd,EAA0B;AACxBL,YAAQM,UAAR,GAAqB,EAACC,KAAKV,IAAII,KAAJ,CAAUI,UAAhB,EAArB;AACD;AACD,MAAIR,IAAII,KAAJ,CAAUO,IAAd,EAAoB;AAClBR,YAAQS,IAAR,GAAeZ,IAAII,KAAJ,CAAUO,IAAV,CAAeJ,WAAf,EAAf;AACD;AACD;AACA,MAAIwC,iBAAiB,EAArB;AACA;AACA,MAAIC,eAAe,CAAnB;AACA;AACA,MAAIC,cAAc,EAACpC,MAAM,EAAP,EAAWc,QAAQ,EAAnB,EAAuBuB,KAAK,CAA5B,EAAlB;AACA;AACA,MAAIC,cAAc,EAACtC,MAAM,EAAP,EAAWc,QAAQ,EAAnB,EAAuBuB,KAAK,IAA5B,EAAlB;AACA;AACA,MAAIE,aAAa,CAAjB;AACA;AACA,MAAIC,UAAU,CAAd;AACA;AACA,MAAIC,UAAU,CAAd;AACA;AACA,MAAIC,WAAW,CAAf;AACA;AACA,MAAIC,cAAc,CAAlB;AACA;AACA,MAAIC,WAAW,CAAf;AACA;AACA,MAAIC,YAAY,CAAhB;AACA;AACA,MAAIC,gBAAgB,CAApB;AACA;AACA,MAAIC,gBAAgB,CAApB;AACA;AACA,MAAIC,eAAe,CAAnB;;AAEA,qBAAS3C,IAAT,CAAcf,OAAd,EAAuB,UAAUgB,GAAV,EAAeC,SAAf,EAA0B;AAC/C,QAAIA,aAAaA,UAAUC,MAAV,GAAmB,CAApC,EAAuC;AACrC,UAAIE,kBAAkBH,UAAUC,MAAhC;AACAD,gBAAUI,OAAV,CAAkB,UAAUC,QAAV,EAAoB;AACpCF,2BAAmB,CAAnB;AACA,YAAIE,SAAS,YAAT,EAAuBqB,KAAvB,KAAiCrB,SAAS,YAAT,EAAuBqB,KAAvB,EAA8BX,IAA9B,CAAjC,IAAwEV,SAAS,YAAT,EAAuBqB,KAAvB,EAA8BX,IAA9B,IAAsC,CAAlH,EAAqH;AACnH,cAAI2B,mBAAmBrC,SAAS,YAAT,EAAuBqB,KAAvB,EAA8BX,IAA9B,CAAvB;AACAa,0BAAgB,CAAhB;AACAS,sBAAYK,gBAAZ;AACA,cAAIA,mBAAmBb,YAAYC,GAAnC,EAAwC;AACtCD,wBAAYpC,IAAZ,GAAmBY,SAASX,IAA5B;AACAmC,wBAAYtB,MAAZ,GAAqBF,SAASG,MAA9B;AACAqB,wBAAYC,GAAZ,GAAkBY,gBAAlB;AACD;AACD,cAAI,CAACX,YAAYD,GAAb,IAAoBY,mBAAmBX,YAAYD,GAAvD,EAA4D;AAC1DC,wBAAYtC,IAAZ,GAAmBY,SAASX,IAA5B;AACAqC,wBAAYxB,MAAZ,GAAqBF,SAASG,MAA9B;AACAuB,wBAAYD,GAAZ,GAAkBY,gBAAlB;AACD;AACDf,yBAAerB,IAAf,CAAoBD,QAApB;AACD;AACD,YAAIF,oBAAoB,CAAxB,EAA2B;AACzB,cAAIwC,uBAAuBf,YAA3B;AACAU,sBAAYD,WAAWT,YAAvB;AACAI,uBAAaH,YAAYC,GAAZ,GAAkBC,YAAYD,GAA3C;AACAH,yBAAeiB,IAAf,CAAoB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClC,mBAAOD,EAAE,YAAF,EAAgBnB,KAAhB,EAAuBX,IAAvB,IAA+B+B,EAAE,YAAF,EAAgBpB,KAAhB,EAAuBX,IAAvB,CAAtC;AACD,WAFD;AAGA,cAAIY,eAAe1B,MAAf,GAAwB,CAA5B,EAA+B;AAC7B0B,2BAAevB,OAAf,CAAuB,UAAU2C,aAAV,EAAyB;AAC9C,kBAAIC,wBAAwBD,cAAc,YAAd,EAA4BrB,KAA5B,EAAmCX,IAAnC,CAA5B;AACA4B,sCAAwB,CAAxB;AACAJ,+BAAiBU,KAAKC,GAAL,CAASF,wBAAwBV,SAAjC,EAA4C,CAA5C,CAAjB;AACA,kBAAIK,yBAAyB,CAA7B,EAAgC;AAC9B,oBAAIf,eAAe,IAAf,KAAwBuB,SAASvB,eAAe,IAAxB,CAAxB,IAA0DA,eAAe,IAAhB,GAAwB,CAArF,EAAwF;AACtFK,4BAAU,CAACN,eAAgBC,eAAe,IAAf,GAAsB,CAAtC,EAA0C,YAA1C,EAAwDF,KAAxD,EAA+DX,IAA/D,IACTY,eAAgBC,eAAe,IAA/B,EAAsC,YAAtC,EAAoDF,KAApD,EAA2DX,IAA3D,CADQ,IAC4D,CADtE;AAED,iBAHD,MAGO;AACLkB,4BAAUN,eAAesB,KAAKG,GAAL,CAASD,SAASvB,eAAe,IAAf,GAAsB,CAA/B,CAAT,EAA4C,CAA5C,CAAf,EAA+D,YAA/D,EAA6EF,KAA7E,EAAoFX,IAApF,CAAV;AACD;AACD,oBAAIa,eAAe,IAAf,KAAwBuB,SAASvB,eAAe,IAAxB,CAA5B,EAA2D;AACzDQ,gCAAc,CAACT,eAAgBC,eAAe,IAAf,GAAsB,CAAtC,EAA0C,YAA1C,EAAwDF,KAAxD,EAA+DX,IAA/D,IACbY,eAAgBC,eAAe,IAA/B,EAAsC,YAAtC,EAAoDF,KAApD,EAA2DX,IAA3D,CADY,IACwD,CADtE;AAED,iBAHD,MAGO;AACLqB,gCAAcT,eAAewB,SAASvB,eAAe,IAAxB,CAAf,EAA8C,YAA9C,EAA4DF,KAA5D,EAAmEX,IAAnE,CAAd;AACD;AACD,oBAAIa,eAAe,IAAf,KAAwBuB,SAASvB,eAAe,IAAxB,CAA5B,EAA2D;AACzDM,4BAAU,CAACP,eAAgBC,eAAe,IAAf,GAAsB,CAAtC,EAA0C,YAA1C,EAAwDF,KAAxD,EAA+DX,IAA/D,IACTY,eAAgBC,eAAe,IAA/B,EAAsC,YAAtC,EAAoDF,KAApD,EAA2DX,IAA3D,CADQ,IAC4D,CADtE;AAED,iBAHD,MAGO;AACLmB,4BAAUP,eAAewB,SAASvB,eAAe,IAAf,GAAsB,CAA/B,CAAf,EAAkD,YAAlD,EAAgEF,KAAhE,EAAuEX,IAAvE,CAAV;AACD;AACDoB,2BAAWD,UAAUD,OAArB;AACAM,gCAAgBA,iBAAiBX,eAAe,CAAhC,CAAhB;AACAY,gCAAgBS,KAAKI,IAAL,CAAUd,aAAV,CAAhB;AACAE,+BAAgBD,gBAAgBF,SAAjB,GAA8B,GAA7C;AACAzD,oBAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnB4C,8BAAY1B,YADO;AAEnBwB,uBAAKvB,WAFc;AAGnB0B,uBAAKxB,WAHc;AAInByB,yBAAOxB,UAJY;AAKnByB,uBAAKtB,QALc;AAMnBuB,0BAAQtB,WANW;AAOnBuB,wBAAMrB,SAPa;AAQnBsB,4BAAUrB,aARS;AASnBsB,4BAAUrB,aATS;AAUnBsB,2BAASrB;AAVU,iBAArB;AAYA,uBAAO,IAAP;AACD;AACF,aAzCD;AA0CD,WA3CD,MA2CO;AACL5D,gBAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB;AACD;AACF;AACF,OAxED;AAyED,KA3ED,MA2EO;AACL7B,UAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB;AACD;AACF,GA/ED,EA+EGC,KA/EH,CA+ES,YAAY;AACnB9B,QAAI4B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wDAArB;AACD,GAjFD;AAkFD,CA5HD","file":"api/locations/locations.controller.js","sourcesContent":["\n'use strict';\nimport Location from './location.model';\n\n// Returns a JSON of all available locations and Mongo _id\nexports.listLocations = function (req, res, all) {\n  // TODO :: Add crime option and year to this\n  var filters = {};\n  if (req.query.state) {\n    filters.State = req.query.state.toUpperCase();\n  }\n  if (req.query.population) {\n    filters.Population = {$gt: req.query.population}\n  }\n  if (req.query.city) {\n    filters.City = req.query.city.toUpperCase();\n  }\n  if (req.query.name) {\n    filters.Name = { $regex: req.query.name.toUpperCase()};\n  }\n  if (req.query.id) {\n    filters._id = req.query.id;\n  }\n  Location.find(filters, function (err, locations) {\n    if (locations && locations.length > 0) {\n      var locationArray = [];\n      var locationCounter = locations.length;\n      locations.forEach(function (location) {\n        locationCounter -= 1;\n        if (all === 1) {\n          locationArray.push(location);\n        } else {\n          locationArray.push({\n            id: location._id,\n            name: location.Name,\n            population: location.Population,\n            city: location.City,\n            campus: location.Campus,\n            state: location.State\n          });\n        }\n        if (locationCounter === 0) {\n          res.status(200).send(locationArray);\n          return null;\n        }\n      });\n    } else {\n      res.status(200).send([])\n    }\n  }).catch(function () {\n    res.status(501).send('Could not retrieve list of locations.')\n  })\n};\n\n// Returns a locations x, y data to be used in the chart\nexports.locationData = function (req, res) {\n  var id = req.params.id;\n  var stat = req.params.stat;\n  var year = req.params.year;\n  if (id) {\n    Location.findById(id).exec().then(function (location) {\n      if (location) {\n        if (stat) {\n          if (year) {\n            res.status(200).send(location.CrimeStats[stat][year].toString());\n          }\n          else {\n            res.status(200).send(location.CrimeStats[stat]);\n          }\n        }\n        else {\n          res.status(200).send(location.CrimeStats);\n        }\n      }\n      else {\n        res.status(200).send([]);\n      }\n    }).catch(function () {\n      res.status(500).send(\"Error: Mongo query failed\");\n    });\n  } else {\n    exports.listLocations(req, res, 1);\n  }\n};\n\n// Gets all unique cities\nexports.getCities = function (req, res) {\n  var filters = {};\n  if (req.query.state) {\n    filters.State = req.query.state.toUpperCase();\n  }\n  if (req.query.city) {\n    filters.City = { $regex: req.query.city.toUpperCase()};\n  }\n  if (req.query.population) {\n    filters.Population = {$gt: req.query.population}\n  }\n  Location.distinct('City', filters, function (errors, cities) {\n    if (errors) {\n      res.status(500).send(\"Error: Mongo query failed\");\n    } else if (cities) {\n      res.status(200).send(cities);\n    } else {\n      res.status(200).send([]);\n    }\n  })\n};\n\n\n/*\n* Returns the following statistics based on request filters\n*\n* The Sample n\n* The Sample Mean\n*   Need to track Sum\n* Median\n* IQR\n*   Q1\n*   Q2\n* The Sample Variance\n* The Sample Standard Deviation\n* The Percent Variation\n* The Sample Range\n* The Sample Max {School: Number}\n* The Sample Min {School: Number}\n*\n*/\nexports.locationStatistics = function (req, res) {\n  var crime = req.params.crime;\n  var year = req.params.year;\n  var filters = {};\n  if (req.query.state) {\n    filters.State = req.query.state.toUpperCase();\n  }\n  if (req.query.population) {\n    filters.Population = {$gt: req.query.population}\n  }\n  if (req.query.city) {\n    filters.City = req.query.city.toUpperCase();\n  }\n  // Useable locations acc\n  var cleanLocations = [];\n  // Number of locations\n  var numLocations = 0;\n  // Location with max occurrence\n  var maxLocation = {name: \"\", campus: \"\", val: 0};\n  // Location with min occurrence\n  var minLocation = {name: \"\", campus: \"\", val: null};\n  // Range of max and min\n  var crimeRange = 0;\n  // Q1\n  var crimeQ1 = 0;\n  // Q3\n  var crimeQ3 = 0;\n  // IQR\n  var crimeIQR = 0;\n  // Median\n  var crimeMedian = 0;\n  // Sum of crime info\n  var crimeSum = 0;\n  // Mean number of occurrence for crime\n  var crimeMean = 0;\n  // Variance for the crime\n  var crimeVariance = 0;\n  // Standard Deviation for the crime\n  var crimeStandDev = 0;\n  // Percent Variation for the crime\n  var crimePercVar = 0;\n\n  Location.find(filters, function (err, locations) {\n    if (locations && locations.length > 0) {\n      var locationCounter = locations.length;\n      locations.forEach(function (location) {\n        locationCounter -= 1;\n        if (location['CrimeStats'][crime] && location['CrimeStats'][crime][year] && location['CrimeStats'][crime][year] > 0) {\n          var locationCrimeVal = location['CrimeStats'][crime][year];\n          numLocations += 1;\n          crimeSum += locationCrimeVal;\n          if (locationCrimeVal > maxLocation.val) {\n            maxLocation.name = location.Name;\n            maxLocation.campus = location.Campus;\n            maxLocation.val = locationCrimeVal;\n          }\n          if (!minLocation.val || locationCrimeVal < minLocation.val) {\n            minLocation.name = location.Name;\n            minLocation.campus = location.Campus;\n            minLocation.val = locationCrimeVal;\n          }\n          cleanLocations.push(location);\n        }\n        if (locationCounter === 0) {\n          var cleanLocationCounter = numLocations;\n          crimeMean = crimeSum / numLocations;\n          crimeRange = maxLocation.val - minLocation.val;\n          cleanLocations.sort(function (a, b) {\n            return a['CrimeStats'][crime][year] - b['CrimeStats'][crime][year];\n          });\n          if (cleanLocations.length > 0) {\n            cleanLocations.forEach(function (cleanLocation) {\n              var cleanLocationCrimeVal = cleanLocation['CrimeStats'][crime][year];\n              cleanLocationCounter -= 1;\n              crimeVariance += Math.pow(cleanLocationCrimeVal - crimeMean, 2);\n              if (cleanLocationCounter === 0) {\n                if (numLocations * 0.25 === parseInt(numLocations * 0.25) && (numLocations * 0.25) > 0) {\n                  crimeQ1 = (cleanLocations[(numLocations * 0.25 - 1)]['CrimeStats'][crime][year] +\n                    cleanLocations[(numLocations * 0.25)]['CrimeStats'][crime][year]) / 2\n                } else {\n                  crimeQ1 = cleanLocations[Math.max(parseInt(numLocations * 0.25 - 1), 0)]['CrimeStats'][crime][year]\n                }\n                if (numLocations * 0.50 === parseInt(numLocations * 0.50)) {\n                  crimeMedian = (cleanLocations[(numLocations * 0.50 - 1)]['CrimeStats'][crime][year] +\n                    cleanLocations[(numLocations * 0.50)]['CrimeStats'][crime][year]) / 2\n                } else {\n                  crimeMedian = cleanLocations[parseInt(numLocations * 0.50)]['CrimeStats'][crime][year]\n                }\n                if (numLocations * 0.75 === parseInt(numLocations * 0.75)) {\n                  crimeQ3 = (cleanLocations[(numLocations * 0.75 - 1)]['CrimeStats'][crime][year] +\n                    cleanLocations[(numLocations * 0.75)]['CrimeStats'][crime][year]) / 2\n                } else {\n                  crimeQ3 = cleanLocations[parseInt(numLocations * 0.75 - 1)]['CrimeStats'][crime][year]\n                }\n                crimeIQR = crimeQ3 - crimeQ1;\n                crimeVariance = crimeVariance / (numLocations - 1);\n                crimeStandDev = Math.sqrt(crimeVariance);\n                crimePercVar = (crimeStandDev / crimeMean) * 100;\n                res.status(200).send({\n                  sampleSize: numLocations,\n                  max: maxLocation,\n                  min: minLocation,\n                  range: crimeRange,\n                  iqr: crimeIQR,\n                  median: crimeMedian,\n                  mean: crimeMean,\n                  variance: crimeVariance,\n                  standDev: crimeStandDev,\n                  percVar: crimePercVar\n                });\n                return null;\n              }\n            });\n          } else {\n            res.status(404).send('No schools fit your parameters.')\n          }\n        }\n      });\n    } else {\n      res.status(404).send('No schools fit your parameters.')\n    }\n  }).catch(function () {\n    res.status(501).send('Could not calculate statistics for filtered locations.')\n  })\n};"],"sourceRoot":"/source/"}